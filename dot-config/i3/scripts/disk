#!/bin/bash

# Установка переменных
ALERT_LOW="${ALERT_LOW:-10}"

# Функция получения информации о диске
get_disk_info() {
    local mount_point=$1
    local df_output=$(df -h -P "$mount_point" | tail -n 1)
    local used=$(echo "$df_output" | awk '{print $5}' | sed 's/%//')
    local available=$(echo "$df_output" | awk '{print $4}')

    echo "$available|$used%"
}

# Получаем список всех примонтированных файловых систем
# Исключаем виртуальные ФС и временные ФС
MOUNTED_FILESYSTEMS=$(df -h -P | grep '^/dev/' | awk '{print $6}' | sort)

# Формируем вывод
FULL_TEXT=""
for fs in $MOUNTED_FILESYSTEMS; do
    # Добавляем иконку в зависимости от типа монтирования
    if [[ "$fs" == "/" ]]; then
        ICON=""  # Корневой раздел
    elif [[ "$fs" == "/home" ]]; then
        ICON=""  # Домашний раздел
    elif [[ "$fs" =~ ^/media.* || "$fs" =~ ^/run/media.* || "$fs" =~ ^/mnt.* ]]; then
        ICON=""  # Съемные носители
    else
        continue # Пропускаем системные директории, которые обычно не нужно отображать
    fi

    INFO=$(get_disk_info "$fs")

    # Добавляем информацию о диске к выводу
    if [ -n "$FULL_TEXT" ]; then
        FULL_TEXT="$FULL_TEXT "
    fi
    FULL_TEXT="${FULL_TEXT}${ICON}${INFO#$fs:}"
done

SHORT_TEXT=$FULL_TEXT

# Проверяем пороговые значения для всех дисков
ALERT=0
for fs in $MOUNTED_FILESYSTEMS; do
    USED=$(df -h -P "$fs" | tail -n 1 | awk '{print $5}' | sed 's/%//')
    if [ $((100 - USED)) -lt $ALERT_LOW ]; then
        ALERT=1
        break
    fi
done

# Выводим результаты
echo "$FULL_TEXT"
echo "$SHORT_TEXT"

# Изменяем цвет, если какой-либо диск превышает порог
if [ $ALERT -eq 1 ]; then
    echo "#FF5555"
fi
